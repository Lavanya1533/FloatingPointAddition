// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "05/01/2021 18:46:27"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          FinalProject
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module FinalProject_vlg_vec_tst();
// constants                                           
// general purpose registers
reg clock;
reg reset;
reg row1;
reg row2;
reg row3;
reg row4;
// wires                                               
wire column1;
wire column2;
wire column3;
wire column4;
wire [7:0] keyCode;
wire [7:0] seg0;
wire [7:0] seg1;
wire [7:0] seg2;
wire [7:0] seg3;
wire [7:0] seg4;
wire [7:0] seg5;
wire segFlag;

// assign statements (if any)                          
FinalProject i1 (
// port map - connection between master ports and signals/registers   
	.clock(clock),
	.column1(column1),
	.column2(column2),
	.column3(column3),
	.column4(column4),
	.keyCode(keyCode),
	.reset(reset),
	.row1(row1),
	.row2(row2),
	.row3(row3),
	.row4(row4),
	.seg0(seg0),
	.seg1(seg1),
	.seg2(seg2),
	.seg3(seg3),
	.seg4(seg4),
	.seg5(seg5),
	.segFlag(segFlag)
);
initial 
begin 
#20000 $stop;
end 
endmodule

